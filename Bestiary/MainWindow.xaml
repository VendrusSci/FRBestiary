<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Bestiary.Model"
        xmlns:local_vm="clr-namespace:Bestiary.ViewModel"
        xmlns:local_c="clr-namespace:Bestiary.ViewModel.Converters"
        xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" x:Class="Bestiary.MainWindow"
        mc:Ignorable="d"
        x:Name="TopLevelWindow"
        Title="Unofficial FR Bestiary Companion" Height="550" Width="1050"
        Icon="{Binding Icon}"
        WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <ResourceDictionary>
            <local_c:LongestItemToWidthConverter x:Key="ComboBoxWidthConverter"/>
            <local_c:ItemToDescriptionConverter x:Key="DescConverter"/>
            <local_c:BondLevelToIconConverter x:Key="BondLevelToIcon"/>
            <local_c:BondLevelToColourConverter x:Key="BondLevelToColour"/>
            <local_c:BookmarkStateToIconConverter x:Key="BookmarkedToIcon"/>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="ResourceDictionaries/ComboBoxResources.xaml"/>
                <ResourceDictionary Source="ResourceDictionaries/MainViewStyles.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Menu Grid.Row="0" Height="20" Background="{Binding Theme.MenuColour, Mode=OneWay}">
            <MenuItem Width="Auto" Header="Options">
                <MenuItem Style="{StaticResource SubMenuItems}" Width="Auto" Header="Clear Bookmarks" Command="{Binding OpenClearBookmarksWindow}"/>
                <MenuItem Style="{StaticResource SubMenuItems}" Width="Auto" Header="Import from Old Version" Command="{Binding OpenFolderImportWindow}"/>
                <MenuItem Style="{StaticResource SubMenuItems}" Width="Auto" Header="Settings" Command="{Binding OpenSettingsWindow}"/>
            </MenuItem>
            <MenuItem Width="Auto" Header="Results">
                <MenuItem Style="{StaticResource SubMenuItems}" Width="Auto" Header="Copyable Results List" Command="{Binding OpenResultListWindow}"/>
                <MenuItem Style="{StaticResource SubMenuItems}" Width="Auto" Header="Set Results to Owned" Command="{Binding SetOwned}"/>
                <MenuItem Style="{StaticResource SubMenuItems}" Width="Auto" Header="Set Results to Not Owned" Command="{Binding SetNotOwned}"/>
                <MenuItem Style="{StaticResource SubMenuItems}" Width="Auto" Header="Set Results to Awakened" Command="{Binding SetAwakened}"/>
                <MenuItem Style="{StaticResource SubMenuItems}" Width="Auto" Header="Set Results to Wary" Command="{Binding SetWary}"/>
            </MenuItem>
            <MenuItem Width="Auto" Header="Views">
                <MenuItem Style="{StaticResource SubMenuItems}" Width="Auto" Header="Flight Rising Bestiary" Command="{Binding OpenFRBestiaryView}"/>
                <MenuItem Style="{StaticResource SubMenuItems}" Width="Auto" Header="Coliseum" Command="{Binding OpenColiseumView}"/>
                <MenuItem Style="{StaticResource SubMenuItems}" Width="Auto" Header="Gathering" Command="{Binding OpenGatheringView}"/>
            </MenuItem>
            <MenuItem Width="Auto" Header="Advanced">
                <MenuItem Style="{StaticResource SubMenuItems}" Width="Auto" Header="Add new Familiar" Command="{Binding OpenAddFamiliarWindow}"/>
                <MenuItem Style="{StaticResource SubMenuItems}" Width="Auto" Header="Delete Familiar" Command="{Binding OpenDeleteFamiliarWindow}"/>
            </MenuItem>
            <MenuItem Width="Auto" Header="Help">
                <MenuItem Style="{StaticResource SubMenuItems}" Width="Auto" Header="Support" Command="{Binding OpenSupportInfoWindow}"/>
                <MenuItem Style="{StaticResource SubMenuItems}" Width="Auto" Header="About" Command="{Binding OpenAboutWindow}"/>
                <MenuItem Style="{StaticResource SubMenuItems}" Width="Auto" Header="User Guide" Command="{Binding OpenUserGuideWindow}"/>
            </MenuItem>
        </Menu>
        <Grid Grid.Row="1" Background="{Binding Theme.BackgroundColour, Mode=OneWay}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0" Grid.IsSharedSizeScope="True">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <GroupBox Grid.Row="0" Header="Search" Margin="5">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <TextBox Grid.Row="0" Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}">
                            <TextBox.InputBindings>
                                <KeyBinding Command="{Binding FetchFamiliars}" Key="Enter"/>
                            </TextBox.InputBindings>
                        </TextBox>
                        <Grid Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <CheckBox Grid.Column="0" IsChecked="{Binding ExactChecked}" HorizontalAlignment="Left" Margin="0,8"/>
                            <Label Grid.Column="1" HorizontalAlignment ="Left" Content="Exact" Margin="1,2,0,2"/>
                            <Button Grid.Column="3" HorizontalAlignment="Right" Template="{DynamicResource ThemedButton}"
                                    Content="Clear all filters" Command="{Binding ClearAllFilters}" Margin="0,5,2,5"/>
                        </Grid>
                    </Grid>
                </GroupBox>
                <GroupBox Grid.Row="1" Header="Filters" Margin="5">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="A"/>
                            <ColumnDefinition MinWidth="160" />
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label Grid.Column="0" Grid.Row="0" Content="Ownership"/>
                        <Label Grid.Column="0" Grid.Row="1" Content="Special"/>
                        <Label Grid.Column="0" Grid.Row="2" Content="Bonding Level"/>
                        <Label Grid.Column="0" Grid.Row="3" Content="Location"/>
                        <Label Grid.Column="0" Grid.Row="4" Content="Availability"/>
                        <Label Grid.Column="0" Grid.Row="5" Content="Source"/>

                        <ComboBox Grid.Column="1" Grid.Row="0" Template="{StaticResource ComboBoxControlThemed}"
                                  ItemsSource="{Binding FamiliarParameters.AvailableOwnedStatus}" 
                                  ItemContainerStyle="{StaticResource ComboBoxItemThemed}"
                                  SelectedItem="{Binding FamiliarParameters.SelectedOwnedStatus}" HorizontalAlignment="Stretch">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Converter={StaticResource DescConverter}, Mode=OneTime}"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                        <ComboBox Grid.Column="1" Grid.Row="1" Template="{DynamicResource ComboBoxControlThemed}"
                                  ItemsSource="{Binding FamiliarParameters.AvailableSpecialStates}" 
                                  ItemContainerStyle="{StaticResource ComboBoxItemThemed}"
                                  SelectedItem="{Binding FamiliarParameters.SelectedSpecialState}" HorizontalAlignment="Stretch">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Converter={StaticResource DescConverter}, Mode=OneTime}"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                        <ComboBox Grid.Column="1" Grid.Row="2" Template="{DynamicResource ComboBoxControlThemed}"
                                  ItemContainerStyle="{DynamicResource ComboBoxItemThemed}"
                                  ItemsSource="{Binding FamiliarParameters.AvailableBondingLevels}" 
                                  SelectedItem="{Binding FamiliarParameters.SelectedBondingLevel}" HorizontalAlignment="Stretch"
                                  Margin="5">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal" x:Name="BondLevelBlock">
                                        <Image Margin="0 0 2 0" Width="10" Height="10" Source="{Binding Converter={StaticResource BondLevelToIcon}}"/>
                                        <TextBlock Text="{Binding Converter={StaticResource DescConverter}, Mode=OneTime}"/>
                                    </StackPanel>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                        <ComboBox Grid.Column="1" Grid.Row="3" Template="{StaticResource ComboBoxControlThemed}"
                                  ItemsSource="{Binding FamiliarParameters.AvailableLocationTypes}" 
                                  ItemContainerStyle="{StaticResource ComboBoxItemThemed}"
                                  SelectedItem="{Binding FamiliarParameters.SelectedLocationType}" HorizontalAlignment="Stretch">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Converter={StaticResource DescConverter}, Mode=OneTime}"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                        <ComboBox Grid.Column="1" Grid.Row="4" Template="{StaticResource ComboBoxControlThemed}"
                                  ItemsSource="{Binding FamiliarParameters.AvailableAvailabilities}" 
                                  ItemContainerStyle="{StaticResource ComboBoxItemThemed}"
                                  SelectedItem="{Binding FamiliarParameters.SelectedAvailability}" HorizontalAlignment="Stretch">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Converter={StaticResource DescConverter}, Mode=OneTime}"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                        <ComboBox Grid.Column="1" Grid.Row="5" Template="{StaticResource ComboBoxControlThemed}"
                                  ItemsSource="{Binding FamiliarParameters.AvailableSources}" 
                                  ItemContainerStyle="{StaticResource ComboBoxItemThemed}"
                                  SelectedItem="{Binding FamiliarParameters.SelectedSource}" HorizontalAlignment="Stretch">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Converter={StaticResource DescConverter}, Mode=OneTime}"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>

                        <Button Grid.Column="2" Grid.Row="0" Content="Clear" Template="{DynamicResource ThemedButton}"
                                Command="{Binding ClearOption}" CommandParameter="{Binding FamiliarParameters.SelectedOwnedStatus}"/>
                        <Button Grid.Column="2" Grid.Row="1" Content="Clear" Template="{DynamicResource ThemedButton}"
                                Command="{Binding ClearOption}" CommandParameter="{Binding FamiliarParameters.SelectedSpecialState}"/>
                        <Button Grid.Column="2" Grid.Row="2" Content="Clear" Template="{DynamicResource ThemedButton}"
                                Command="{Binding ClearOption}" CommandParameter="{Binding FamiliarParameters.SelectedBondingLevel}"/>
                        <Button Grid.Column="2" Grid.Row="3" Content="Clear" Template="{DynamicResource ThemedButton}"
                                Command="{Binding ClearOption}" CommandParameter="{Binding FamiliarParameters.SelectedLocationType}"/>
                        <Button Grid.Column="2" Grid.Row="4" Content="Clear" Template="{DynamicResource ThemedButton}"
                                Command="{Binding ClearOption}" CommandParameter="{Binding FamiliarParameters.SelectedAvailability}"/>
                        <Button Grid.Column="2" Grid.Row="5" Content="Clear" Template="{DynamicResource ThemedButton}"
                                Command="{Binding ClearOption}" CommandParameter="{Binding FamiliarParameters.SelectedSource}"/>

                        <Label Grid.Column="3" Grid.Row="2" Content="Exclude:"/>
                        <Label Grid.Column="3" Grid.Row="3" Content="Exclude:"/>
                        <Label Grid.Column="3" Grid.Row="4" Content="Exclude:"/>

                        <CheckBox Grid.Column="4"  Grid.Row="2" IsChecked="{Binding FamiliarParameters.BondingLevelInvert}"/>
                        <CheckBox Grid.Column="4"  Grid.Row="3" IsChecked="{Binding FamiliarParameters.LocationInvert}"/>
                        <CheckBox Grid.Column="4"  Grid.Row="4" IsChecked="{Binding FamiliarParameters.AvailabilityInvert}"/>
                    </Grid>
                </GroupBox>
                <GroupBox Grid.Row="2" Header="Subfilters" Margin="5">
                    <Grid>
                        <Grid.Resources>
                            <FrameworkElement x:Key="ProxyElement" DataContext="{Binding}"/>
                        </Grid.Resources>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <ContentControl Visibility="Collapsed" Content="{StaticResource ProxyElement}"/>
                        <ItemsControl Grid.Row="0" ItemsSource="{Binding FamiliarParameters.SubFilterList}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition SharedSizeGroup="A"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Label Grid.Column="0" Style="{DynamicResource LabelInItemsControl}" Content="{Binding Name}"/>
                                        <ComboBox Grid.Column="1" Margin="5" ItemsSource="{Binding AvailableOptions}" SelectedItem="{Binding SelectedOption}" 
                                                  HorizontalAlignment="Stretch" Style="{DynamicResource ComboBoxInItemsControl}"
                                                  Template="{DynamicResource ComboBoxControlThemedItemsControl}" ItemContainerStyle="{DynamicResource ComboBoxItemThemedItemsControl}"
                                                  x:Name="Fish">
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate>
                                                    <TextBlock Style="{DynamicResource TextBlockInComboBox}" Text="{Binding Converter={StaticResource DescConverter}, Mode=OneTime}"/>
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                        </ComboBox>
                                        <Button Grid.Column="2" Margin="5" Content="Clear" Template="{DynamicResource ThemedButtonInItemsControl}" Command="{Binding Clear}" Style="{DynamicResource ButtonInItemsControlStyle}"/>
                                    </Grid>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </Grid>
                </GroupBox>
                <Button Grid.Row="4" Content="Go" Margin="5" Template="{DynamicResource ThemedButtonInItemsControl}" Command="{Binding FetchFamiliars}"/>
            </Grid>
            <GroupBox Grid.Column="1" Header="Familiars" Margin="5">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Label Grid.Column="0" Width="Auto" HorizontalContentAlignment="Center" Content="Sort by:"/>
                        <ComboBox Grid.Column="1" Margin="5" Template="{StaticResource ComboBoxControlThemed}"
                                  ItemContainerStyle="{StaticResource ComboBoxItemThemed}"
                                  ItemsSource="{Binding AvailableSortTypes}" SelectedItem="{Binding SelectedSortType, Mode=TwoWay}" 
                                  IsSynchronizedWithCurrentItem="True" Width="{Binding AvailableSortTypes, Converter={StaticResource ComboBoxWidthConverter}}">
                            <ComboBox.ItemTemplate >
                                <DataTemplate>
                                    <TextBlock Text="{Binding Converter={StaticResource DescConverter}, Mode=OneTime}"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                        <Button Grid.Column="2" Margin="5" Content="Go" Width="30" Template="{DynamicResource ThemedButton}" Command="{Binding SortResults}"/>
                        <Label Grid.Column="4" Width="Auto" HorizontalContentAlignment="Center" Content="Results:"/>
                        <TextBlock Grid.Column="5" Width="50" Margin="5" VerticalAlignment="Center" Text="{Binding ResultCount}" Background="{Binding Theme.BackgroundColour}"/>
                        <Label Grid.Column="6" Width="Auto" HorizontalContentAlignment="Center" Content="Owned:"/>
                        <TextBlock Grid.Column="7" Width="50" Margin="5" VerticalAlignment="Center" Text="{Binding OwnedCount}" Background="{Binding Theme.BackgroundColour}"/>
                        <Label Grid.Column="8" Width="Auto" HorizontalContentAlignment="Center" Content="Awakened:"/>
                        <TextBlock Grid.Column="9" Width="50" Margin="5" VerticalAlignment="Center" Text="{Binding AwakenedCount}" Background="{Binding Theme.BackgroundColour}"/>
                    </Grid>
                    <DataGrid Grid.Row ="1" Width="Auto" Height="Auto"
                              AlternationCount="2" AutoGenerateColumns="False" GridLinesVisibility="None" 
                              ItemsSource="{Binding FilteredFamiliars}" IsSynchronizedWithCurrentItem="True">
                        <DataGrid.Resources>
                            <local_c:OwnedToBoolConverter x:Key="OwnedToBoolConverter"/>
                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent"/>
                            <Style x:Key="BondLevelStyle" TargetType="{x:Type DataGridCell}">
                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter Property="Foreground" Value="Black"/>
                                        <Setter Property="BorderThickness" Value="0"/>
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="false">
                                        <Setter Property="BorderThickness" Value="0"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                            <Style x:Key="ResultsWindowStyle" TargetType="{x:Type DataGridRow}">
                                <EventSetter Event="Control.PreviewMouseDoubleClick" Handler="ChangeSelectedRow"/>
                                <EventSetter Event="UIElement.PreviewMouseLeftButtonDown" Handler="ChangeSelectedRow"/>
                                <EventSetter Event="UIElement.PreviewMouseRightButtonDown" Handler="ChangeSelectedRow"/>
                            </Style>
                        </DataGrid.Resources>
                        <DataGrid.RowStyle>
                            <Style TargetType="{x:Type DataGridRow}">
                                <Setter Property="ContextMenu">
                                    <Setter.Value>
                                        <ContextMenu ItemsSource="{Binding ResultsActions}" Width="Auto">
                                            <ContextMenu.ItemTemplate>
                                                <DataTemplate DataType="MenuItem">
                                                    <MenuItem Header="{Binding Name}" Command="{Binding Action}"/>
                                                </DataTemplate>
                                            </ContextMenu.ItemTemplate>
                                        </ContextMenu>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="AlternationIndex" Value="0">
                                        <Setter Property="Background" Value="{Binding Theme.ResultWindowColour, Mode=OneWay}"/>
                                    </Trigger>
                                    <Trigger Property="AlternationIndex" Value="1">
                                        <Setter Property="Background" Value="{Binding Theme.ResultWindowAltColour, Mode=OneWay}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.RowStyle>
                        <DataGrid.InputBindings>
                            <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding OpenDataFamiliarWindow}" CommandParameter="{Binding FilteredFamiliars/}"/>
                        </DataGrid.InputBindings>
                        <DataGrid.Columns>
                            <DataGridTemplateColumn Header="Icon" Width="Auto" IsReadOnly="True">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Image
                                            Source="{Binding Icon}"
                                            Width="50"
                                            Height="50"
                                            RenderOptions.BitmapScalingMode="HighQuality"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Header="Name" Width="Auto" IsReadOnly="True" Binding="{Binding Info.Familiar.Name}" TextBlock.TextAlignment="Center"/>
                            <DataGridTextColumn Header="Ownership" Width="Auto" IsReadOnly="True" TextBlock.TextAlignment="Center"
                                                Binding="{Binding Info.Owned, Converter={StaticResource DescConverter}}"/>
                            <DataGridTemplateColumn Header="Bonding Level" IsReadOnly="False">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox MinWidth="90" IsEditable="False" Template="{StaticResource ComboBoxControlThemed}"
                                                  ItemContainerStyle="{StaticResource ComboBoxItemThemed}" ItemsSource="{Binding AvailableBondingLevels}" 
                                                  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                                                  IsEnabled="{Binding Info.Owned, Converter={StaticResource OwnedToBoolConverter}}" 
                                                  SelectedItem="{Binding Info.BondLevel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                  IsSynchronizedWithCurrentItem="True">
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate>
                                                    <StackPanel Orientation="Horizontal">
                                                        <Image Margin="0 0 2 0" Width="10" Height="10" Source="{Binding Converter={StaticResource BondLevelToIcon}}"/>
                                                        <TextBlock Text="{Binding Converter={StaticResource DescConverter}, Mode=OneTime}"/>
                                                    </StackPanel>
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                        </ComboBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Width="10" IsReadOnly="True"/>
                            <DataGridTemplateColumn Header="Location" Width="Auto" IsReadOnly="False">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox  ItemsSource="{Binding AvailableLocationTypes}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" MinWidth="90"
                                                   Template="{StaticResource ComboBoxControlThemed}" ItemContainerStyle="{StaticResource ComboBoxItemThemed}"
                                                   SelectedItem="{Binding Info.Location, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                   IsSynchronizedWithCurrentItem="True" IsEnabled="{Binding Info.Owned, Converter={StaticResource OwnedToBoolConverter}}">
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding Converter={StaticResource DescConverter}, Mode=OneTime}"/>
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                        </ComboBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn  Width="Auto" IsReadOnly="True">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Content="Gotcha!" Template="{DynamicResource ThemedButton}" Command="{Binding SetOwned}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn  Width="Auto" IsReadOnly="True">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Command="{Binding ToggleBookmark}">
                                            <Image Margin="0 0 1 0" Width="20" Height="20" 
                                                   Source="{Binding Info.Bookmarked, Converter={StaticResource BookmarkedToIcon}}"/>
                                        </Button>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </GroupBox>
        </Grid>
    </Grid>
</Window>
