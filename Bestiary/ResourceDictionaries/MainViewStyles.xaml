<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Bestiary.ResourceDictionaries">
    <Style TargetType="{x:Type GroupBox}">
        <Setter Property="BorderBrush" Value="{Binding Theme.BorderColour, Mode=OneWay}"/>
        <Setter Property="Foreground" Value="{Binding Theme.TextColour}"/>
    </Style>

    <Style TargetType="{x:Type Label}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{Binding Theme.TextColour}"/>
    </Style>
    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Background" Value="{Binding Theme.ControlColour}"/>
        <Setter Property="Foreground" Value="{Binding Theme.TextColour}"/>
    </Style>
    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{Binding Theme.ControlColour}"/>
        <Setter Property="Foreground" Value="{Binding Theme.TextColour}"/>
    </Style>
    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Background" Value="{Binding Theme.ControlColour}"/>
        <Setter Property="Foreground" Value="{Binding Theme.TextColour}"/>
    </Style>
    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Foreground" Value="{Binding Theme.TextColour}"/>
    </Style>
    <Style TargetType="{x:Type Button}">
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Background" Value="{Binding Theme.ControlColour}"/>
        <Setter Property="Foreground" Value="{Binding Theme.TextColour}"/>
    </Style>
    <Style TargetType="{x:Type MenuItem}">
        <Setter Property="Foreground" Value="{Binding Theme.MenuTextColour}"/>
    </Style>
    <Style TargetType="{x:Type ContextMenu}">
        <Setter Property="Background" Value="{Binding Theme.MenuColour}"/>
        <Setter Property="Foreground" Value="{Binding Theme.MenuTextColour}"/>
    </Style>
    <Style TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Visibility" Value="Collapsed"/>
    </Style>
    <Style TargetType="{x:Type DataGridCell}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{Binding Theme.TextColour}"/>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="true">
                <Setter Property="BorderThickness" Value="0"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="false">
                <Setter Property="BorderThickness" Value="0"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type DataGridRow}">
        <Setter Property="ContextMenu">
            <Setter.Value>
                <ContextMenu ItemsSource="{Binding ResultsActions}" Width="Auto">
                    <ContextMenu.ItemTemplate>
                        <DataTemplate DataType="MenuItem">
                            <MenuItem Header="{Binding Name}" Command="{Binding Action}"/>
                        </DataTemplate>
                    </ContextMenu.ItemTemplate>
                </ContextMenu>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{Binding Theme.TextColour}"/>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="true">
                <Setter Property="BorderBrush" Value="Black"/>
                <Setter Property="BorderThickness" Value="1"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="false">
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="1"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>